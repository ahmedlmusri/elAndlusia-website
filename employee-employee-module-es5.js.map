{"version":3,"sources":["webpack:///src/app/employee/add-employee/add-employee.component.ts","webpack:///src/app/employee/add-employee/add-employee.component.html","webpack:///src/app/employee/employee.module.ts","webpack:///src/app/employee/employee.routing.ts","webpack:///src/app/employee/search-employee/search-employee.component.ts","webpack:///src/app/employee/search-employee/search-employee.component.html","webpack:///src/app/services/employee.service.ts"],"names":["AddEmployeeComponent","employeService","translate","dataObj","name","date","code","department","gender","showOverlay","state","form","addEmployee","setTimeout","submitData","EmployeeModule","forChild","employeeRoute","path","component","SearchEmployeeComponent","employeeService","employees","isSelected","JSON","parse","getData","employeeFilter","filter","employee","value","map","item","selectAll","EmployeeService","Employes","resetFilter","data","localStorage","getItem","push","setItem","stringify","console","log"],"mappings":"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","file":"employee-employee-module-es5.js","sourcesContent":["import { state, style, trigger } from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { TanslationService } from 'src/app/services/tanslation.service';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.scss']\n  \n})\nexport class AddEmployeeComponent implements OnInit {\n  dataObj:any = {\n    name: null,\n    date: null,\n    code:null,\n    department: null,\n    gender: null,\n  }\n  showOverlay:boolean = false;\n  state = \"normal\";\n  constructor(private employeService: EmployeeService,\n    public translate: TanslationService,\n    ) { }\n\n  ngOnInit(): void {\n   \n  }\n\n  submitData(form: NgForm){\n    this.employeService.addEmployee(this.dataObj);\n    this.showOverlay = true;\n    setTimeout(()=>{\n      this.showOverlay = false;\n    },1000)\n  }\n}\n","<div [ngClass]=\"{'rtl-dir': translate.currentLang == 'ar', 'text-right': translate.currentLang == 'ar'}\">\n    <div class=\"employee__navigation\">\n        <div>\n            <div class=\"row\">\n                <ul class=\"list-unstyled\">\n                    <li class=\"active\"><a [routerLink]=\"['/employee']\">{{\"ADD_EMPLOYEE\" | translate | titlecase}}</a>\n                    </li>\n                    <li><a [routerLink]=\"['/employee/searchEmployee']\">{{\"SEARCH_EMPLOYEE\" | translate | titlecase}}</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n\n    <form #addEmployee=\"ngForm\" class=\"m-t-30\" (ngSubmit)=\"submitData(addEmployee)\" class=\"addEmployee\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group m-t-40 row\">\n                    <label class=\"col-12 col-form-label\">\n                        {{\"NAME\" | translate | titlecase}}\n                        <span class=\"text-danger\"> *</span>\n                    </label>\n\n                    <div class=\"col-12\">\n                        <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"dataObj.name\" #name=\"ngModel\"\n                            required>\n                        <small *ngIf=\"!name.valid && name.touched\" class=\"text-danger\">\n                            {{ \"MESSAGE_MISSING_REQUIRED\" | translate | titlecase}}\n                        </small>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group m-t-40 row\">\n                    <label class=\"col-12 col-form-label\">\n                        {{\"DEPARTMENT\" | translate | titlecase}}\n                        <span class=\"text-danger\"> *</span>\n                    </label>\n\n                    <div class=\"col-12\">\n                        <select class=\"form-control\" name=\"department\" [(ngModel)]=\"dataObj.department\"\n                            #department=\"ngModel\" required>\n                            <option value=\"Department1\" selected>Department 1</option>\n                            <option value=\"Department2\">Department 2</option>\n                            <option value=\"Department3\">Department 3</option>\n                            <option value=\"Department4\">Department 4</option>\n\n                        </select>\n                        <small *ngIf=\"!department.valid && department.touched\" class=\"text-danger\">\n                            {{ \"MESSAGE_MISSING_REQUIRED\" | translate | titlecase}}\n                        </small>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group m-t-40 row\">\n                    <label class=\"col-12 col-form-label\">\n                        Employee Code\n                        <span class=\"text-danger\"> *</span>\n                    </label>\n\n                    <div class=\"col-12\">\n                        <input type=\"text\" class=\"form-control\" name=\"code\" [(ngModel)]=\"dataObj.code\" #code=\"ngModel\"\n                            required>\n                        <small *ngIf=\"!code.valid && code.touched\" class=\"text-danger\">\n                            {{ \"MESSAGE_MISSING_REQUIRED\" | translate | titlecase}}\n                        </small>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"form-group m-t-40 row\">\n                    <label class=\"col-12 col-form-label\">\n                        BirthDay\n                        <span class=\"text-danger\"> *</span>\n                    </label>\n\n                    <div class=\"col-12\">\n                        <input type=\"date\" class=\"form-control\" name=\"date\" [(ngModel)]=\"dataObj.date\" #date=\"ngModel\"\n                            required>\n                        <small *ngIf=\"!date.valid && date.touched\" class=\"text-danger\">\n                            {{ \"MESSAGE_MISSING_REQUIRED\" | translate | titlecase}}\n                        </small>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-10\">\n                <div class=\"form-group m-t-40 row\">\n                    <label class=\"col-2 col-form-label\">\n                        {{\"GENDER\" | translate | titlecase}}\n                    </label>\n\n                    <div class=\"col-9\">\n                        <div class=\"row\">\n                            <div class=\"col-3\">\n                                <input type=\"radio\" class=\"radio__label\" name=\"gender\" value=\"male\"\n                                    [(ngModel)]=\"dataObj.gender\">\n                                <label>{{\"MALE\" | translate | titlecase}}</label>\n                            </div>\n                            <div class=\"col-3\">\n                                <input type=\"radio\" name=\"gender\" value=\"female\" [(ngModel)]=\"dataObj.gender\">\n                                <label class=\"radio__label\">{{\"FEMALE\" | translate | titlecase}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-2\">\n                <button class=\"btn btn-success\" [disabled]=\"addEmployee.invalid\">{{\"ADD\" | translate |\n                    titlecase}}</button>\n            </div>\n        </div>\n    </form>\n\n    <div class=\"successMessage\" *ngIf=\"showOverlay\">\n        <div class=\"successMessage__title\">\n            {{\"SUCCESS\" | translate | titlecase}}\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { SearchEmployeeComponent } from './search-employee/search-employee.component';\nimport { RouterModule } from '@angular/router';\nimport {employeeRoute} from './employee.routing'\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from '../shared/shared/shared.module';\n\n\n@NgModule({\n  declarations: [AddEmployeeComponent, SearchEmployeeComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild(employeeRoute)\n  ],\n  exports: [\n    TranslateModule,\n  ]\n})\nexport class EmployeeModule { }\n","import { Routes } from \"@angular/router\";\r\nimport {AddEmployeeComponent} from './add-employee/add-employee.component'\r\nimport { SearchEmployeeComponent } from \"./search-employee/search-employee.component\";\r\nexport const employeeRoute: Routes =[\r\n    {path:'', component: AddEmployeeComponent},\r\n    {path:'searchEmployee', component: SearchEmployeeComponent}\r\n\r\n    \r\n]","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { EmployeeService } from 'src/app/services/employee.service';\nimport { TanslationService } from 'src/app/services/tanslation.service';\n\n@Component({\n  selector: 'app-search-employee',\n  templateUrl: './search-employee.component.html',\n  styleUrls: ['./search-employee.component.scss']\n})\nexport class SearchEmployeeComponent implements OnInit {\n  @ViewChild('searchEmploye', { static: true }) searchEmploye: NgForm;\n\n  employees:any[] = [];\n  isSelected:boolean = false;\n  constructor(private employeeService: EmployeeService,\n    public translate: TanslationService,\n    ) { }\n\n  ngOnInit(): void {\n   this.employees = JSON.parse(this.employeeService.getData());\n  }\n\n  submitData(form: NgForm){\n    let employeeFilter = JSON.parse(this.employeeService.getData());\n    this.employees =  employeeFilter.filter(employee =>  form.value.name == employee['name'] || form.value.department == employee['department']);\n  }\n\n  selectAll(){\n    this.isSelected = !this.isSelected;\n    this.employees.map(item => {\n      item['Selected'] = this.isSelected\n    });\n  }\n}\n","<div class=\"employee__navigation\">\n    <div >\n        <div class=\"row\">\n            <ul class=\"list-unstyled\">\n                <li><a [routerLink]=\"['/employee']\">Add Employee</a></li>\n                <li class=\"active\"><a [routerLink]=\"['/employee/searchEmployee']\">Search Employee</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n<div class=\"all__employee\">\n  <form class=\"all__employee--search__employe\"  #searchEmploye=\"ngForm\" (ngSubmit)=\"submitData(searchEmploye)\">\n    <div class=\"row\">\n      <div class=\"col-6\">\n          <div class=\"form-group m-t-40 row\">\n              <label  class=\"col-12 col-form-label\">\n                {{\"NAME\" | translate | titlecase}}\n                <span class=\"text-danger\"> *</span>\n              </label>\n      \n              <div class=\"col-12\">\n                  <input type=\"text\" class=\"form-control\" name=\"name\" ngModel #name=\"ngModel\" required>\n                  <small *ngIf=\"!name.valid && name.touched\" class=\"text-danger\">\n                    {{ \"MESSAGE_MISSING_REQUIRED\" | translate | titlecase}}\n                  </small>\n              </div>\n      \n          </div>\n      </div>\n      <div class=\"col-6\">\n          <div class=\"form-group m-t-40 row\">\n              <label  class=\"col-12 col-form-label\">\n                {{\"DEPARTMENT\" | translate | titlecase}}\n                <span class=\"text-danger\"> *</span>\n              </label>\n      \n              <div class=\"col-12\">\n                  <select  class=\"form-control\" name=\"department\" ngModel #department=\"ngModel\" required>\n                      <option value=\"Department1\" selected>Department 1</option>\n                      <option value=\"Department2\">Department 2</option>\n                      <option value=\"Department3\">Department 3</option>\n                      <option value=\"Department4\">Department 4</option>\n\n                  </select>\n                  <small *ngIf=\"!department.valid && department.touched\" class=\"text-danger\">\n                    {{ \"MESSAGE_MISSING_REQUIRED\" | translate | titlecase}}\n                  </small>\n              </div>\n      \n          </div>\n      </div>\n  </div>\n  \n  <div class=\"form-group\">\n    <button class=\"btn btn-success\" [disabled]=\"searchEmploye.invalid\">{{\"SEARCH\" | translate | titlecase}}</button>\n  </div>\n  </form>\n    <table class=\"table tabled-border\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th scope=\"col\"> <input type=\"checkbox\" (change)=\"selectAll()\"></th>\n            <th scope=\"col\">{{\"EMPLOYEE_NAME\" | translate | titlecase}}</th>\n            <th scope=\"col\">{{\"EMPLOYEE_CODE\" | translate | titlecase}}</th>\n            <th scope=\"col\">{{\"DATE\" | translate | titlecase}}</th>\n            <th scope=\"col\">{{\"DEPARTMENT\" | translate | titlecase}}</th>\n            <th scope=\"col\">{{\"GENDER\" | translate | titlecase}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let employee of employees; let i = index\">\n            <th scope=\"row\"><input type=\"checkbox\" name=\"checkbox{{i}}\" [checked]=\"employee?.Selected\"></th>\n            <td>{{employee.name}}</td>\n            <td>{{employee.code}}</td>\n            <td>{{employee.date}}</td>\n            <td>{{employee.department}}</td>\n            <td>{{employee.gender}}</td>\n          </tr>\n          <tr *ngIf=\"!(employees.length > 0)\">\n            <td class=\"text-center bg-white\" colspan=\"6\">\n              {{\"NO_DATA_TO_BE_DISPLAYED\" | translate | titlecase}}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      \n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  Employes:any = [];\n  resetFilter = new Subject();\n  constructor() { }\n\n  addEmployee(data: object){\n   this.Employes = JSON.parse(localStorage.getItem('employess'))\n    this.Employes.push(data);\n    localStorage.setItem('employess',JSON.stringify(this.Employes));\n    console.log(this.Employes)\n\n  }\n\n  getData(){\n    return localStorage.getItem('employess');\n  }\n}\n"]}